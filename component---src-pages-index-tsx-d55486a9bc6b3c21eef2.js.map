{"version":3,"file":"component---src-pages-index-tsx-d55486a9bc6b3c21eef2.js","mappings":"q3DAqBA,IAsEA,EAtEsB,WACpB,IA8BMA,GA9BwBC,EAAAA,EAAAA,IAAe,cAArCC,kBA8BwBC,MAAMC,KAAI,SAACC,GAAD,UACxCC,GAAID,EAAKC,GACTC,KAAMF,EAAKG,OAAOC,MACfJ,EAAKK,gBAGV,KAAsCC,EAAAA,EAAAA,UAAS,IAA/C,GAAOC,EAAP,KAAoBC,EAApB,KACA,KAAsCF,EAAAA,EAAAA,UAA2B,IAAjE,GAAOG,EAAP,KAAoBC,EAApB,KAmBA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAduB,SAACE,GACxB,IAAIC,EAAAA,EAAAA,GAAQD,KAAUC,EAAAA,EAAAA,GAAQC,OAAOC,UAAW,MAAO,GAEvD,IAAMC,EAAOF,OAAOC,SAASE,GAG7B,OAFgBD,EAAKE,MAAMC,OAAX,UAAqBP,EAArB,MAEDb,KAAI,gBAAGqB,EAAH,EAAGA,IAAH,cACdJ,EAAKK,MAAMD,IADG,IAEjBnB,GAAImB,EACJE,KAAMN,EAAKK,MAAMD,GAAKE,KAAKC,MAAM,KAAK,QAKzBC,CAAiBjB,MAC/B,CAACA,IAGF,gCACE,gBAAC,KAAD,CAAkBkB,KAAM9B,EAAM,KAC9B,gBAAC,KAAD,CAAmB+B,SAAU,SAACd,GAAD,OAAWJ,EAAeI,MACvD,gBAAC,KAAD,CACEjB,OAAOkB,EAAAA,EAAAA,GAAQN,GACXZ,EAAMgC,QAAO,SAACC,EAASV,GAAV,OAA4BA,KACzCT,M,g9BC9EZ,IAqBA,EArBY,WACV,SAA4BH,EAAAA,EAAAA,WAAS,GAArC,GAAOuB,EAAP,KAAgBC,EAAhB,KAMA,OAJAnB,EAAAA,EAAAA,YAAU,WACRmB,GAAS,KACR,IAGD,gCACGD,GACC,gCACE,gBAACE,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD,W,0CCnBZ,UAAeC,EAAf","sources":["webpack://aroundus.github.io/./src/containers/HomeContainer.tsx","webpack://aroundus.github.io/./src/pages/App.tsx","webpack://aroundus.github.io/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport isEmpty from 'lodash-es/isEmpty';\nimport { Index } from 'lunr';\n\nimport { KeyVisualSection, PostPresentationSection, PostSearchSection } from '~components/Section';\nimport { AnyObject, Post } from '~types/global';\n\ndeclare global {\n  interface Window {\n    __LUNR__: {\n      [key: string]: {\n        index: Index;\n        store: {\n          [ref: string]: AnyObject;\n        };\n      };\n    };\n  }\n}\n\nconst HomeContainer = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: {\n            fields: [frontmatter___date, frontmatter___index, frontmatter___title],\n            order: [DESC, DESC, ASC]\n          }\n          limit: 100\n        ) {\n          nodes {\n            id\n            fields {\n              slug\n            }\n            html\n            frontmatter {\n              category\n              index\n              title\n              description\n              image\n              date(formatString: \"YYYY-MM-DD\")\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const posts = allMarkdownRemark.nodes.map((node: AnyObject) => ({\n    id: node.id,\n    path: node.fields.slug,\n    ...node.frontmatter,\n  }));\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchPosts, setSearchPosts] = useState<Array<AnyObject>>([]);\n\n  const getSearchResults = (query: string) => {\n    if (isEmpty(query) || isEmpty(window.__LUNR__)) return [];\n\n    const lunr = window.__LUNR__.ko;\n    const results = lunr.index.search(`${query}*`);\n\n    return results.map(({ ref }) => ({\n      ...lunr.store[ref],\n      id: ref,\n      date: lunr.store[ref].date.split('T')[0],\n    }));\n  };\n\n  useEffect(() => {\n    setSearchPosts(getSearchResults(searchQuery));\n  }, [searchQuery]);\n\n  return (\n    <>\n      <KeyVisualSection post={posts[0]} />\n      <PostSearchSection onChange={(query) => setSearchQuery(query)} />\n      <PostPresentationSection\n        posts={isEmpty(searchQuery)\n          ? posts.filter((_: Post, index: number) => index)\n          : searchPosts}\n      />\n    </>\n  );\n};\n\nexport default HomeContainer;\n","import React, { useEffect, useState } from 'react';\n\nimport Layout from '~components/Layout';\nimport SEO from '~components/SEO';\n\nimport HomeContainer from '~containers/HomeContainer';\n\nconst App = () => {\n  const [isMount, setMount] = useState(false);\n\n  useEffect(() => {\n    setMount(true);\n  }, []);\n\n  return (\n    <>\n      {isMount && (\n        <>\n          <SEO />\n          <Layout>\n            <HomeContainer />\n          </Layout>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import App from './App';\nexport default App;\n"],"names":["posts","useStaticQuery","allMarkdownRemark","nodes","map","node","id","path","fields","slug","frontmatter","useState","searchQuery","setSearchQuery","searchPosts","setSearchPosts","useEffect","query","isEmpty","window","__LUNR__","lunr","ko","index","search","ref","store","date","split","getSearchResults","post","onChange","filter","_","isMount","setMount","SEO","Layout","App"],"sourceRoot":""}