{"version":3,"file":"component---src-components-post-tsx-3e31e25198591805a8be.js","mappings":"sKAoEA,UAzDa,SAAC,GAAmC,IAAD,IAAhCA,EAAgC,EAAhCA,KACRC,GADwC,EAA1BC,SACPF,MAAAA,OAAH,EAAGA,EAAMG,gBAEnB,OACE,gCACE,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,+BACE,0BAAKF,MAAAA,GAAL,UAAKA,EAAMG,mBAAX,aAAK,EAAmBC,OACxB,yBAAIJ,MAAAA,GAAJ,UAAIA,EAAMG,mBAAV,aAAI,EAAmBE,MACvB,2BAASC,wBAAyB,CAAEC,OAAQP,MAAAA,OAAF,EAAEA,EAAMQ","sources":["webpack://aroundus.github.io/./src/components/Post.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from './Layout';\nimport SEO from './SEO';\n\ninterface PostProps {\n  data: any;\n  location: any;\n}\n\nconst Post = ({ data, location }: PostProps) => {\n  const post = data?.markdownRemark;\n\n  return (\n    <>\n      <SEO />\n      <Layout>\n        <article>\n          <h1>{post?.frontmatter?.title}</h1>\n          <p>{post?.frontmatter?.date}</p>\n          <section dangerouslySetInnerHTML={{ __html: post?.html }} />\n        </article>\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query Post(\n    $id: String!\n    $previousPostID: String\n    $nextPostID: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostID }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostID }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["data","post","location","markdownRemark","frontmatter","title","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}