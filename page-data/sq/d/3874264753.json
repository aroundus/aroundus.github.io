{"data":{"allMarkdownRemark":{"nodes":[{"id":"57e89794-5c2c-5a1e-b3ba-4b67824db3f2","fields":{"slug":"/kubernetes/component/"},"html":"<h1>시작하기</h1>\n<blockquote>\n<p>쿠버네티스 공식 문서의 <a href=\"https://kubernetes.io/ko/docs/concepts/overview/components/\">컴포넌트</a>와 서비큐라의 <a href=\"https://subicura.com/2019/05/19/kubernetes-basic-1.html#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\">쿠버네티스 기본 개념</a> 내용을 참조해서 작성한 글입니다. 자세한 내용은 해당 문서를 참조하세요. 😉</p>\n</blockquote>\n<p><strong>Component</strong>(컴포넌트)는 독립적인 소프트웨어 단위 모듈입니다. 독립적인 모듈은 의존성이 없기 때문에 재사용을 가능하게 합니다. 파란색 7각형 모양의 도형이 컴포넌트를 의미합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1441px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/de8dd2b080cc11fa24a2541f3e541a4d/2332f/kubernetes-components.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 48.958333333333336%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"쿠버네티스를 구성하는 컴포넌트들\"\n        title=\"쿠버네티스를 구성하는 컴포넌트들\"\n        src=\"/static/de8dd2b080cc11fa24a2541f3e541a4d/2332f/kubernetes-components.jpg\"\n        srcset=\"/static/de8dd2b080cc11fa24a2541f3e541a4d/a3e66/kubernetes-components.jpg 480w,\n/static/de8dd2b080cc11fa24a2541f3e541a4d/fb816/kubernetes-components.jpg 960w,\n/static/de8dd2b080cc11fa24a2541f3e541a4d/2332f/kubernetes-components.jpg 1441w\"\n        sizes=\"(max-width: 1441px) 100vw, 1441px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>쿠버네티스를 구성하는 컴포넌트들</p></figcaption>\n  </figure></p>\n<h2 id=\"Master-Node---Control-Plane-Component\" style=\"position:relative;\">Master Node - Control Plane Component<a href=\"#Master-Node---Control-Plane-Component\" aria-label=\"Master Node   Control Plane Component permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p><strong>Master Node</strong>(마스터 노드)는 다양한 모듈의 확장성을 고려한 <strong>MSA</strong>* 방식으로 구성하였습니다. <strong>Control Plane</strong>(컨트롤 플레인) 컴포넌트는 클러스터에 관한 전반적인 결정을 수행하고 클러스터 이벤트를 감지합니다.</p>\n<ul>\n<li>MSA(Microservices Architecture, 마이크로서비스 아키텍처): 하나의 큰 애플리케이션을 여러 개의 작은 애플리케이션으로 쪼개어 변경과 조합이 가능하도록 만든 소프트웨어 개발 기법</li>\n</ul>\n<h3 id=\"kube-apiserver\" style=\"position:relative;\">kube-apiserver<a href=\"#kube-apiserver\" aria-label=\"kube apiserver permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>kube-apiserver</strong>(큐브 API 서버)는 쿠버네티스의 모든 요청을 처리하는 마스터의 핵심 컴포넌트입니다. <code>kubectl</code> <em>- 및 내부 컴포넌트 -</em> 요청을 처리합니다.  <strong>Desired State</strong>(원하는 상태)를 etcd에 저장하고 저장한 상태를 조회합니다. 요청에 대한 권한을 체크한 후 요청을 거부할 수도 있습니다. 노드에서 실행 중인 컨테이너의 로그를 보여주고 명령을 보내는 등 디버거 역할도 수행합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1152px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/f6a8ddb17eac98dc2f79d770d79a3476/4472f/kube-apiserver.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.833333333333336%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"© KT Cloud\"\n        title=\"© KT Cloud\"\n        src=\"/static/f6a8ddb17eac98dc2f79d770d79a3476/4472f/kube-apiserver.jpg\"\n        srcset=\"/static/f6a8ddb17eac98dc2f79d770d79a3476/a3e66/kube-apiserver.jpg 480w,\n/static/f6a8ddb17eac98dc2f79d770d79a3476/fb816/kube-apiserver.jpg 960w,\n/static/f6a8ddb17eac98dc2f79d770d79a3476/4472f/kube-apiserver.jpg 1152w\"\n        sizes=\"(max-width: 1152px) 100vw, 1152px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>© KT Cloud</p></figcaption>\n  </figure></p>\n<h3 id=\"etcd\" style=\"position:relative;\">etcd<a href=\"#etcd\" aria-label=\"etcd permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>etcd</strong>(/etc distributed, 엣시디)는 키-값 데이터베이스 저장소입니다. 쿠버네티스 클러스터의 구성, 서비스 검색 및 스케줄러 조정, 시스템의 실제 상태(current state)와 원하는 상태(desired state)를 저장합니다.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 750px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/f31cf2cd5ad0e8b5b2162957a4c2572b/d0f75/etcd.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 33.33333333333333%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/f31cf2cd5ad0e8b5b2162957a4c2572b/d0f75/etcd.jpg\"\n        srcset=\"/static/f31cf2cd5ad0e8b5b2162957a4c2572b/a3e66/etcd.jpg 480w,\n/static/f31cf2cd5ad0e8b5b2162957a4c2572b/d0f75/etcd.jpg 750w\"\n        sizes=\"(max-width: 750px) 100vw, 750px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>쿠버네티스 클러스터는 <strong>모든 데이터를 etcd에 저장</strong>합니다. <code>kubectl get &#x3C;xyz></code> 명령어 실행 시 읽을 수 있는 모든 데이터를 저장합니다. <code>kubectl create &#x3C;xyz></code> 명령어 실행 시 변경된 항목을 업데이트하고 서로에게 변경 사항을 알립니다.</p>\n<h3 id=\"kube-scheduler\" style=\"position:relative;\">kube-scheduler<a href=\"#kube-scheduler\" aria-label=\"kube scheduler permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>kube-scheduler</strong>(큐브 스케줄러)는 새로운 파드를 배포할 때 자원 할당이 가능한 노드를 선택합니다. <code>cpu</code>, <code>memory</code>, <code>affinity</code> 등의 조건을 만족하는 노드를 찾아 배포합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1180px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/763b8d0c25c042991d39b4ddf11a0e4c/096b1/kube-scheduler.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 52.29166666666667%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"© KT Cloud\"\n        title=\"© KT Cloud\"\n        src=\"/static/763b8d0c25c042991d39b4ddf11a0e4c/096b1/kube-scheduler.jpg\"\n        srcset=\"/static/763b8d0c25c042991d39b4ddf11a0e4c/a3e66/kube-scheduler.jpg 480w,\n/static/763b8d0c25c042991d39b4ddf11a0e4c/fb816/kube-scheduler.jpg 960w,\n/static/763b8d0c25c042991d39b4ddf11a0e4c/096b1/kube-scheduler.jpg 1180w\"\n        sizes=\"(max-width: 1180px) 100vw, 1180px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>© KT Cloud</p></figcaption>\n  </figure></p>\n<h3 id=\"kube-controller-manager\" style=\"position:relative;\">kube-controller-manager<a href=\"#kube-controller-manager\" aria-label=\"kube controller manager permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>kube-controller-manager</strong>(큐브 컨트롤러 매니저)는 쿠버네티스 오브젝트의 상태를 관리합니다.</p>\n<h3 id=\"cloud-controller-manager\" style=\"position:relative;\">cloud-controller-manager<a href=\"#cloud-controller-manager\" aria-label=\"cloud controller manager permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>cloud-controller-manager</strong>(클라우드 컨트롤러 매니저)는 AWS, GCE, Azure 등 클라우드에 특화된 컴포넌트입니다. 노드를 추가/삭제하고 로드 밸런서를 연결하거나 볼륨을 붙일 수 있습니다.</p>\n<h2 id=\"Worker-Node---Node-Component\" style=\"position:relative;\">Worker Node - Node Component<a href=\"#Worker-Node---Node-Component\" aria-label=\"Worker Node   Node Component permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p><strong>Worker Node</strong>(워커 노드)는 마스터 노드와 통신하면서 필요한 파드를 생성합니다. 모든 노드 상에서 동작합니다.</p>\n<h3 id=\"kubelet\" style=\"position:relative;\">kubelet<a href=\"#kubelet\" aria-label=\"kubelet permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>kubelet</strong>(큐블릿)은 각 노드에서 실행하는 기본 <strong>노드 에이전트</strong>로 마스터 노드와 통신합니다. 각 노드에 할당된 파드의 생명 주기를 관리합니다. 파드 배포 시 <strong>PodSpec</strong>* 정보를 토대로 컨테이너에 이상이 없는지 확인합니다.</p>\n<ul>\n<li>PodSpec: 파드를 설명하는 YAML 또는 JSON 객체</li>\n</ul>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/64fb249616e50827644f4c195d5f68f1/ee99d/kubelet.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 51.87500000000001%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"© Aswin&#39;s Site\"\n        title=\"© Aswin&#39;s Site\"\n        src=\"/static/64fb249616e50827644f4c195d5f68f1/aaf92/kubelet.jpg\"\n        srcset=\"/static/64fb249616e50827644f4c195d5f68f1/a3e66/kubelet.jpg 480w,\n/static/64fb249616e50827644f4c195d5f68f1/fb816/kubelet.jpg 960w,\n/static/64fb249616e50827644f4c195d5f68f1/aaf92/kubelet.jpg 1920w,\n/static/64fb249616e50827644f4c195d5f68f1/ee99d/kubelet.jpg 2286w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>© Aswin’s Site</p></figcaption>\n  </figure></p>\n<h3 id=\"kube-proxy\" style=\"position:relative;\">kube-proxy<a href=\"#kube-proxy\" aria-label=\"kube proxy permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>kube-proxy</strong>(큐브 프록시)는 각 노드에서 실행하는 프록시로 컨테이너 서비스 포트로 접근할 수 있도록 합니다. 쿠버네티스는 클러스터 내부에 별도의 가상 네트워크를 설정하고 관리합니다.</p>\n<p>kube-proxy는 클러스터 내부 IP로 연결 요청이 들어오면 적절한 파드에 전달합니다. 네트워크를 관리하는 방법은 userspace, <strong>iptables</strong>(기본 모드), IPVS(IP Virtual Server) 3가지가 있습니다.</p>\n<h4>userspace 모드</h4>\n<p>클라이언트에서 서비스 IP를 통한 요청이 들어오면 iptables 프로그램을 거쳐 <strong>kube-proxy에 전달</strong>합니다. kube-proxy는 <strong>Round Robin</strong>* 방식에 따라 요청을 파드에 분배합니다.</p>\n<ul>\n<li>Round Robin(라운드 로빈): 프로세스들 사이에 순서대로 일정 시간 CPU를 할당하고 할당된 시간이 지나면 그 프로세스는 잠시 보류한 뒤 다른 프로세스에게 기회를 부여하는 운영 방식</li>\n</ul>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 804px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/f710410b42aeaa5d3816d1737699e56c/56b8b/kube-proxy-userspace.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 56.875%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/f710410b42aeaa5d3816d1737699e56c/56b8b/kube-proxy-userspace.jpg\"\n        srcset=\"/static/f710410b42aeaa5d3816d1737699e56c/a3e66/kube-proxy-userspace.jpg 480w,\n/static/f710410b42aeaa5d3816d1737699e56c/56b8b/kube-proxy-userspace.jpg 804w\"\n        sizes=\"(max-width: 804px) 100vw, 804px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>kube-proxy를 거치기 때문에 파드에 요청이 실패하면 자동으로 다른 파드에 요청을 재시도합니다.</p>\n<h4>iptables 모드</h4>\n<p>클라이언트에서 서비스 IP를 통한 요청이 들어오면 iptables 프로그램을 거쳐 <strong>직접 파드에 전달</strong>합니다. kube-proxy는 API 서버 요청만 받고 클라이언트 트래픽은 받지 않기 때문에 userspace 모드보다 성능이 빠릅니다.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 815px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/da64f68630b76ef6ba498ecb2d0d8afa/9bf9d/kube-proxy-iptables.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 75%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/da64f68630b76ef6ba498ecb2d0d8afa/9bf9d/kube-proxy-iptables.jpg\"\n        srcset=\"/static/da64f68630b76ef6ba498ecb2d0d8afa/a3e66/kube-proxy-iptables.jpg 480w,\n/static/da64f68630b76ef6ba498ecb2d0d8afa/9bf9d/kube-proxy-iptables.jpg 815w\"\n        sizes=\"(max-width: 815px) 100vw, 815px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>kube-proxy를 거치지 않아 파드에 요청이 실패하면 재시도를 하지 않기 때문에 배포 오브젝트 설정 시 <code>readinessProbe</code> 값을 알맞게 설정해야 합니다.</p>","frontmatter":{"category":"kubernetes","index":3,"title":"Component","description":"인체를 세포로 구성한다면, 쿠버네티스는 컴포넌트로 구성합니다. 쿠버네티스를 구성하는 컴포넌트의 종류는 매우 다양하게 있어요.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/kubernetes/cover.jpg?raw=true","date":"2021-12-29"}},{"id":"20e16e74-75ec-5284-a146-ba2050e2c06a","fields":{"slug":"/kubernetes/cluster/"},"html":"<h1>🧐<br />클러스터?</h1>\n<p>쿠버네티스를 시작하기 위해 가장 먼저 해야 할 일은 <strong>Cluster</strong>(클러스터)를 생성하는 것입니다. 쿠버네티스 클러스터는 컨테이너화된 애플리케이션을 실행하는 노드의 집합입니다.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1655px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/4c1ad2ed7aa9159bccf6cab608205153/76ee5/cluster-structure.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 55.833333333333336%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/4c1ad2ed7aa9159bccf6cab608205153/76ee5/cluster-structure.jpg\"\n        srcset=\"/static/4c1ad2ed7aa9159bccf6cab608205153/a3e66/cluster-structure.jpg 480w,\n/static/4c1ad2ed7aa9159bccf6cab608205153/fb816/cluster-structure.jpg 960w,\n/static/4c1ad2ed7aa9159bccf6cab608205153/76ee5/cluster-structure.jpg 1655w\"\n        sizes=\"(max-width: 1655px) 100vw, 1655px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2 id=\"Node\" style=\"position:relative;\">Node<a href=\"#Node\" aria-label=\"Node permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p><strong>Node</strong>(노드)는 쿠버네티스 클러스터를 구성하는 머신입니다. 머신은 클러스터 유형에 따라 가상 머신(Virtual Machine, VM) 또는 물리 머신(Physical Computer)일 수 있습니다.</p>\n<blockquote>\n<p>쿠버네티스는 클라우드, 온프레미스 환경을 모두 지원합니다. AWS, GCP, Azure 서비스에 구성하면 가상 머신, 서버 컴퓨터에 구성하면 물리 머신이 됩니다.</p>\n</blockquote>\n<p>노드에는 두 가지 종류가 있습니다.</p>\n<ul>\n<li>Master Node</li>\n<li>Worker Node</li>\n</ul>\n<h3 id=\"Master-Node\" style=\"position:relative;\">Master Node<a href=\"#Master-Node\" aria-label=\"Master Node permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>Master Node</strong>(마스터 노드)는 클러스터를 관리하는 노드입니다. 두뇌 역할을 하는 <strong>Control Plane</strong>(컨트롤 플레인)을 형성합니다. 컨트롤 플레인은 전체 쿠버네티스 시스템을 관리하고 통제합니다. 컨테이너의 라이프사이클을 정의, 배포, 관리하기 위한 API와 인터페이스를 노출하는 컨테이너를 관리합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 720px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/862bed7d51b8a8a39ab5de426c43b63a/20801/master-node.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 58.333333333333336%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"마스터 노드 구조\"\n        title=\"마스터 노드 구조\"\n        src=\"/static/862bed7d51b8a8a39ab5de426c43b63a/20801/master-node.jpg\"\n        srcset=\"/static/862bed7d51b8a8a39ab5de426c43b63a/a3e66/master-node.jpg 480w,\n/static/862bed7d51b8a8a39ab5de426c43b63a/20801/master-node.jpg 720w\"\n        sizes=\"(max-width: 720px) 100vw, 720px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>마스터 노드 구조</p></figcaption>\n  </figure></p>\n<p>노란색 영역이 컨트롤 플레인입니다. 중심 컴포넌트는 RESTful 인터페이스로 쿠버네티스 기능을 제공하는 <strong>API 서버</strong>입니다. 컨트롤 플레인에 대한 자세한 정보는 Amazon EKS 워크샵의 <a href=\"https://awskrug.github.io/eks-workshop/introduction/architecture/architecture_control/\">쿠버네티스 아키텍처 - 컨트롤 플레인</a> 내용을 참조하세요.</p>\n<p>클러스터를 구성할 때 어려움을 겪는 부분이 바로 마스터 노드를 구성하는 일입니다. AWS의 경우 이와 같은 문제를 인지하고 쿠버네티스를 쉽게 사용할 수 있도록 <strong>Amazon EKS</strong> 관리형 서비스를 만들어 자체 쿠버네티스 컨트롤 플레인을 제공하고 있습니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 760px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/923a16a2fcebb4a47a34d1cd95539339/a6335/aws-eks-introduction.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 32.916666666666664%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"AWS 공식 사이트에서 소개한 EKS 정의\"\n        title=\"AWS 공식 사이트에서 소개한 EKS 정의\"\n        src=\"/static/923a16a2fcebb4a47a34d1cd95539339/a6335/aws-eks-introduction.jpg\"\n        srcset=\"/static/923a16a2fcebb4a47a34d1cd95539339/a3e66/aws-eks-introduction.jpg 480w,\n/static/923a16a2fcebb4a47a34d1cd95539339/a6335/aws-eks-introduction.jpg 760w\"\n        sizes=\"(max-width: 760px) 100vw, 760px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>AWS 공식 사이트에서 소개한 EKS 정의</p></figcaption>\n  </figure></p>\n<p>AWS 공식 사이트에서 소개한 정의입니다. <strong>완전 관리형</strong>(fully managed)은 <strong>우리가 마스터 노드를 구성할 필요가 없다</strong>는 의미입니다. 실제로 필자도 EKS 서비스를 사용하면서 별도의 마스터 노드를 구성하지 않았습니다.</p>\n<h3 id=\"Worker-Node\" style=\"position:relative;\">Worker Node<a href=\"#Worker-Node\" aria-label=\"Worker Node permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p><strong>Worker Node</strong>(워커 노드, 작업자 노드)는 파드를 통해 실제 컨테이너 이미지를 실행하는 노드입니다. 컨테이너에 CPU, 메모리, 네트워크, 스토리지와 같은 능력을 제공하는 <strong>Data Plane</strong>(데이터 플레인)을 형성합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 680px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/6a9e7015918bae1bd3ca15dcaa6e0739/a22ce/worker-node.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 70.625%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"워커 노드 구조\"\n        title=\"워커 노드 구조\"\n        src=\"/static/6a9e7015918bae1bd3ca15dcaa6e0739/a22ce/worker-node.jpg\"\n        srcset=\"/static/6a9e7015918bae1bd3ca15dcaa6e0739/a3e66/worker-node.jpg 480w,\n/static/6a9e7015918bae1bd3ca15dcaa6e0739/a22ce/worker-node.jpg 680w\"\n        sizes=\"(max-width: 680px) 100vw, 680px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>워커 노드 구조</p></figcaption>\n  </figure></p>\n<p>EKS 서비스로 구성한 쿠버네티스의 워커 노드는 <strong>EC2 인스턴스</strong>로 실행합니다. 워커 노드는 줄여서 <strong>노드</strong>로 부르기도 합니다. Amazon EKS 서비스에서 <strong>노드와 인스턴스는 같은 의미</strong>입니다. 다음 명령어는 클러스터 노드를 조회합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=sally data-host=localhost></span></span>$ kubectl get nodes</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 795px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/55e7e4511cd23fa646765a5a00a16687/396d0/terminal-kubectl-get-nodes.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 18.333333333333336%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/55e7e4511cd23fa646765a5a00a16687/396d0/terminal-kubectl-get-nodes.jpg\"\n        srcset=\"/static/55e7e4511cd23fa646765a5a00a16687/a3e66/terminal-kubectl-get-nodes.jpg 480w,\n/static/55e7e4511cd23fa646765a5a00a16687/396d0/terminal-kubectl-get-nodes.jpg 795w\"\n        sizes=\"(max-width: 795px) 100vw, 795px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>클러스터에 2개의 EC2 인스턴스 노드를 실행하고 있습니다. 노드의 이름은 <code>&#x3C;private-IPv4-address>.&#x3C;region>.compute.internal</code> 형식으로 구성합니다.</p>\n<p>데이터 플레인에 대한 자세한 정보는 Amazon EKS 워크샵의 <a href=\"https://awskrug.github.io/eks-workshop/introduction/architecture/architecture_worker/\">쿠버네티스 아키텍처 - 데이터 플레인</a> 내용을 참조하세요.</p>","frontmatter":{"category":"kubernetes","index":2,"title":"Cluster","description":"회사 쿠버네티스를 설립하고 직원들을 수용할 사무실 클러스터를 매입하였습니다. 사무실은 임원진 구역인 마스터 노드와 직원 구역인 워커 노드로 나누어 관리하려고 합니다. 임원진은 컨설팅 업체 EKS에 자문을 구하면 1시간 안에 구성할 수 있어요.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/kubernetes/cover.jpg?raw=true","date":"2021-12-27"}},{"id":"6a5d51f5-1934-5277-a08c-452362b09e93","fields":{"slug":"/docker/introduction/"},"html":"<h1>시작하기</h1>\n<blockquote>\n<p>노마드 코더의 <a href=\"https://youtu.be/chnCcGCTyBg\">도커가 좋은 이유</a> 영상의 내용을 재구성한 글입니다. 영어지만 자막을 제공하는 Red Hat의 <a href=\"https://youtu.be/n-JwAM6XF88\">왜 컨테이너인가?</a> 영상도 있습니다.</p>\n</blockquote>\n<p><strong>Docker</strong>(도커)는 <strong>컨테이너 기반의 오픈 소스 가상화 플랫폼</strong>입니다. 컨테이너 기반이라는 말이 무엇일까요? 우리는 보통 컨테이너를 어떤 물체를 격리하는 공간으로 생각합니다. IT에서 의미하는 <strong>Container</strong>(컨테이너)는 <strong>격리된 공간에서 프로세스가 동작하는 가상화 기술</strong>입니다. 또는 소프트웨어와 그것에 종속된 모든 것을 포함하는 가볍고 휴대성이 높은 실행 가능한 이미지를 의미합니다.</p>\n<p>컨테이너는 <strong>Environment Disparity</strong>(환경 차이)를 해결합니다. 다음 몇 가지 <strong>예시</strong>를 살펴보면 이해할 수 있습니다.</p>\n<h3 id=\"예시-1\" style=\"position:relative;\">예시 1<a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>당신은 불금 저녁에 개발을 하고 있습니다. 그리고 코드를 서버에 올리기만 하면 되는 상황에 있습니다. 일은 거의 다 끝났고 저녁에 친구들이랑 삼겹살만 먹으면 되는데, 이상하게 코드가 서버에만 올리면 작동을 하지 않는 겁니다. 이유인즉 로컬은 윈도우, 서버는 리눅스였습니다. 운영 체제가 다르기 때문에 서버에 올리기 전까지는 알 수도 없고 해결할 수도 없는 오류입니다. 안타깝지만 당신은 <em>- 오류를 해결할 때까지 -</em> 집에 있어야 합니다.</p>\n<blockquote>\n<p>필자도 위와 같은 문제를 경험한 적이 있습니다. 그래서 환경 차이로 인한 오류를 방지하려면 최대한 서버 환경과 동일하게 로컬 환경을 구성할 수밖에 없었습니다.</p>\n</blockquote>\n<h3 id=\"예시-2\" style=\"position:relative;\">예시 2<a href=\"#%EC%98%88%EC%8B%9C-2\" aria-label=\"예시 2 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>당신은 최신 <code>Node.js</code> 버전으로 개발을 하고 있고, 서버는 한참이나 이전 버전입니다. 개발을 마치고 서버에 올리는 순간! 역시나 서버에만 올리면 모듈 설치에 실패하는 겁니다. 노드 버전 차이의 문제를 직감하고 허겁지겁 로컬에 있는 노드 버전을 낮췄습니다. 서버가 하나 더 있네요. 맙소사! 여기는 노드를 설치하지 않았습니다. 허겁지겁 최신 버전으로 설치하고 올리는 순간! 이번에는 최신 버전이라서 오류가 발생합니다.</p>\n<blockquote>\n<p>개발자는 코드만 열심히 작성하면 된다고 생각한 필자는 버전의 늪에 빠지는 순간 하루 종일 괴로운 숫자 맞추기 놀이를 하고 있었습니다. 💀</p>\n</blockquote>\n<p>도커가 환경 차이를 해결하는 방법은 간단합니다. ① 도커를 로컬과 서버에 설치합니다. ② <code>Dockerfile</code> 이름으로 파일을 생성하고 그 안에 구현하고 싶은 환경을 정의합니다. (<code>Node.js</code>, <code>Java</code>, <code>Go</code>, <code>Python</code>, <code>Git</code> 등) ③ 도커는 파일의 내용을 읽고 필요한 모듈을 다운로드합니다. ④ 도커는 당신이 설정한 환경과 비슷한 <strong>가상 컨테이너</strong>를 만들어 냅니다. ⑤ 로컬과 서버는 <strong>동일한 환경</strong>이 됩니다.</p>\n<p>도커 컨테이너들은 <strong>독립적</strong>이기 때문에 서버 하나에 컨테이너 여러 개를 가질 수 있습니다. (<code>Node.js</code> 컨테이너, <code>Java</code> 컨테이너, <code>Go</code> 컨테이너 등) 서버에 환경을 설정하는 것이 아닌 컨테이너에 설정하는 것이죠.</p>\n<h3 id=\"예시-3\" style=\"position:relative;\">예시 3<a href=\"#%EC%98%88%EC%8B%9C-3\" aria-label=\"예시 3 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>당신이 만든 앱이 입소문을 타기 시작합니다. 트래픽을 감당할 수 없을 정도로 접속자가 많아져서 서버를 몇 개 더 만들었습니다. 트래픽에 의한 오류를 발견해서 수정하고 서버에 올려야 하는데, 여러 개라서 시간이 걸리네요. 잠깐, 방금 몇 번 서버에 반영했는지 정신줄을 놓치고 말았습니다.</p>\n<p>도커를 사용하면 간단합니다. 하나의 서버에 원하는 수만큼 컨테이너를 복제하면 됩니다. 트래픽이 줄어들면? 컨테이너 수를 줄이면 됩니다. 매번 새로운 서비스를 만들 때마다 새로운 서버를 생성할 필요가 없습니다. 당신이 원할 때마다 도커로 새로운 환경을 생성할 수 있습니다.</p>\n<h2 id=\"정리\" style=\"position:relative;\">정리<a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p>도커는 <strong>격리된 가상화 공간</strong>을 만듭니다. ① 원하는 개발 환경을 <code>Dockerfile</code>에 저장하면 도커는 당신이 원하는 환경을 만듭니다. ② 컨테이너는 독립적으로 작용하기 때문에 모듈식으로 관리할 수 있습니다.</p>","frontmatter":{"category":"docker","index":1,"title":"Docker 소개","description":"Docker(도커)는 컨테이너 기반의 가상화 플랫폼으로 Environment Disparity(환경 차이)를 해결합니다. 다음 몇 가지 예시를 살펴보면 이해할 수 있습니다.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/docker/cover.jpg?raw=true","date":"2021-12-26"}},{"id":"375e2b29-1b27-5ed0-afab-d2b66d983863","fields":{"slug":"/kubernetes/introduction/"},"html":"<h1>시작하기</h1>\n<blockquote>\n<p>노마드 코더의 <a href=\"https://youtu.be/S3FVcdZcZnA\">쿠버네티스가 대세가 된 이유 3가지</a> 영상의 내용을 재구성한 글입니다. 자세한 정보는 <a href=\"https://kubernetes.io/ko/docs/concepts/overview/what-is-kubernetes/\">쿠버네티스 공식 문서</a> 내용을 참조하세요.</p>\n</blockquote>\n<p><strong>Kubernetes</strong>(쿠버네티스)는 구글이 만든 컨테이너화된 애플리케이션을 자동으로 배포, 스케일링 및 관리하는 <strong>오픈 소스 컨테이너 관리 플랫폼</strong>입니다. 줄여서 K8s(케이츠, 케이에이츠) 또는 Kube(큐브)로 부릅니다. 구글이 설립한 <a href=\"https://www.cncf.io/\">CNCF</a><small>(Cloud Native Computing Foundation, 클라우드 네이티브 컴퓨팅 재단)</small>의 졸업 단계 프로젝트에 속한다고 하네요.</p>\n<p>시작하기 전 <strong>Docker</strong>(도커)와 <strong>Container</strong>(컨테이너)에 대한 사전 학습이 필요합니다. 도커와 컨테이너를 잘 모른다면 <a href=\"/docker/introduction\">여기</a>부터 시작하세요.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1320px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/0806c967113912fe828a7fcd4ce39b75/9ef87/kubernetes-introduction.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 40.625%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"쿠버네티스 공식 사이트에서 소개한 정의\"\n        title=\"쿠버네티스 공식 사이트에서 소개한 정의\"\n        src=\"/static/0806c967113912fe828a7fcd4ce39b75/9ef87/kubernetes-introduction.jpg\"\n        srcset=\"/static/0806c967113912fe828a7fcd4ce39b75/a3e66/kubernetes-introduction.jpg 480w,\n/static/0806c967113912fe828a7fcd4ce39b75/fb816/kubernetes-introduction.jpg 960w,\n/static/0806c967113912fe828a7fcd4ce39b75/9ef87/kubernetes-introduction.jpg 1320w\"\n        sizes=\"(max-width: 1320px) 100vw, 1320px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>쿠버네티스 공식 사이트에서 소개한 정의</p></figcaption>\n  </figure></p>\n<p><strong>운영 수준의 컨테이너 오케스트레이션</strong> 제목부터 진입 장벽이 느껴지는 건 기분 탓이겠죠? 마치 쿠버네티스가 입구에서부터 ‘이 정의를 이해하는 분만 들어오세요.’ 경고하는 것처럼 보입니다. 하지만 당황하지 마세요! 쿠버네티스는 결국 <strong>컨테이너를 관리하기 위한 툴</strong>입니다. 다음 몇 가지 <strong>예시</strong>를 살펴보면 이해할 수 있습니다.</p>\n<h3 id=\"예시-1\" style=\"position:relative;\">예시 1<a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<blockquote>\n<p>만약 당신이 개발한 웹 사이트를 도커 컨테이너 안에 넣고 AWS(아마존 웹 서비스)에 배포하는 작업만 수행한다면 쿠버네티스를 알아야 할 이유가 없습니다. 도커를 업로드하고 배포하는 일이 전부이기 때문입니다.</p>\n</blockquote>\n<p>쿠버네티스는 여러 개의 컨테이너를 다룰 때 쓰입니다. <strong>MSA</strong>* 서비스를 개발한다고 가정해 봅시다. 어떤 컨테이너는 이용자 등록만 다루고, 어떤 컨테이너는 인증만 다루고, 어떤 컨테이너는 결제만 다룬다면 이 모든 컨테이너들은 동시에 업로드가 이루어져야 합니다.</p>\n<ul>\n<li>MSA(Microservices Architecture, 마이크로서비스 아키텍처): 하나의 큰 애플리케이션을 여러 개의 작은 애플리케이션으로 쪼개어 변경과 조합이 가능하도록 만든 소프트웨어 개발 기법</li>\n</ul>\n<p>수동으로 배포하면 된다고 생각하겠지만 컨테이너 수가 많아지면 문제가 발생할 수 있습니다. 만약 서비스의 핵심 파트인 컨테이너가 죽었다면? 우리는 재빠르게 해당 컨테이너를 재시작해야 합니다.</p>\n<p>바로 이때 쿠버네티스가 등장합니다! 쿠버네티스에게 해당 컨테이너를 작동할 수 있도록 권한을 부여하세요. 쿠버네티스는 그 중 하나라도 죽으면 낼름 재시작합니다. -> <strong>자동화된 복구</strong></p>\n<p>쿠버네티스는 실패한 컨테이너를 재시작하고, 컨테이너를 교체하며, ‘사용자 정의 상태 검사’에 응답하지 않는 컨테이너를 죽이고, 서비스 준비가 끝날 때까지 그러한 과정을 클라이언트에 보여주지 않습니다.</p>\n<p>바로 <strong>컨테이너 모니터링</strong>을 실시하는 것입니다. 자동으로 재시작하기 때문에 걱정을 한시름 놓을 수 있습니다. 컨테이너가 많으면 많을수록 쿠버네티스는 더 유용하게 쓰일 것입니다.</p>\n<h3 id=\"예시-2\" style=\"position:relative;\">예시 2<a href=\"#%EC%98%88%EC%8B%9C-2\" aria-label=\"예시 2 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>1만 명의 이용자가 접속을 시도합니다. 하지만 당신은 이러한 경우에 대한 대비를 하지 않았습니다. 이때 쿠버네티스는 해당 웹 사이트의 니즈를 수용할 수 있도록 자동으로 새로운 컨테이너를 만들 수 있습니다. -> <strong>서비스 디스커버리와 로드 밸런싱</strong></p>\n<p>쿠버네티스는 DNS 이름을 사용하거나 자체 IP 주소를 사용하여 컨테이너를 노출합니다. 컨테이너에 대한 트래픽이 많아지면 쿠버네티스는 네트워크 트래픽을 로드밸런싱하여 배포가 안정적으로 이루어질 수 있도록 합니다.</p>\n<p>쿠버네티스는 자동으로 해당 웹 니즈에 맞춰서 컨테이너들을 준비하고 사람들이 떠나고 니즈가 줄어들면 컨테이너를 지정한 최소 숫자로 자동 조정합니다.</p>\n<h3 id=\"예시-3\" style=\"position:relative;\">예시 3<a href=\"#%EC%98%88%EC%8B%9C-3\" aria-label=\"예시 3 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>클라우드에 5개의 컨테이너가 있습니다. 코드를 수정하여 새로운 버전이 나왔습니다. 이때 당신은 어떻게 작업하나요? <em>- 아마도 -</em>  컨테이너들을 종료하고 새로운 버전을 올리고 컨테이너들을 재시작할 것입니다. 작업을 실행하는 동안 웹 사이트가 잠시 다운된다는 의미이기도 합니다.</p>\n<p>쿠버네티스는 컨테이너의 신규 버전을 차례대로 업데이트 처리합니다. 쿠버네티스를 자동화해서 배포용 새 컨테이너를 만들고, 기존 컨테이너를 제거하고, 모든 리소스를 새 컨테이너에 적용합니다. 물론 그러한 과정을 클라이언트에 보여주지 않습니다. -> <strong>자동화된 롤아웃</strong></p>\n<h2 id=\"정리\" style=\"position:relative;\">정리<a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p>컨테이너로 작업하면 자동화해야 할 것들이 은근히 많습니다. (새로운 버전을 배포한다거나, 컨테이너 사이즈를 조정한다거나, 컨테이너가 죽었을 때 재시작해야 한다거나 등) 쿠버네티스는 많은 컨테이너가 필요한 웹/앱 서비스를 운영하는 데 있어 훌륭한 솔루션입니다.</p>","frontmatter":{"category":"kubernetes","index":1,"title":"Kubernetes 소개","description":"Kubernetes(쿠버네티스)는 컨테이너를 관리하기 위한 툴입니다. 다음 몇 가지 예시를 살펴보면 이해할 수 있습니다.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/kubernetes/cover.jpg?raw=true","date":"2021-12-26"}},{"id":"cf389a5a-6187-5fa9-a410-b0d81b95f2b4","fields":{"slug":"/developer/wakatime-vs-codetime/"},"html":"<h1>🙋🏻🗓<br />한 주 동안 무엇을 개발했어요?</h1>\n<p>정신없이 개발하느라 시간은 쏜살같이 지나간 것 같은데 갑자기 <mark>‘한 주 동안 무엇을 개발했지?’</mark> 궁금해질 때가 있습니다. 프로젝트는 몇 개 작업했는지, 각 프로젝트마다 투자한 시간은 몇 분인지, 주로 작업한 파일은 무엇인지 등등…</p>\n<p>커밋 이력으로는 부족합니다. 커밋하기 전 로컬 환경에서 이루어진 수많은 삽질의 시간까지는 알 수가 없으니까요. 여러분도 오롯이 개발에 투자한 시간 동안 무엇을 개발했는지 한 번쯤은 궁금하지 않을까요?</p>\n<h2 id=\"WakaTime\" style=\"position:relative;\">WakaTime<a href=\"#WakaTime\" aria-label=\"WakaTime permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p>며칠 전, 팀 동료가 슬랙으로 재밌는 플러그인을 공유했습니다. 그 이름은 바로 <a href=\"https://github.com/wakatime/vscode-wakatime\">WakaTime(와카타임)</a>. 이 플러그인은 개발하는 동안 메트릭을 수집해서 대시보드로 통계를 내는 일을 합니다. (물론 그 대시보드는 여러분만 볼 수 있어요.) 너무나도 유명해서 대부분의 에디터에 플러그인을 지원한다고 하네요. 저는 VS Code에서 냉큼 검색해 봤습니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 512px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/8f95c0df8caa980e4acd1a2bd509351c/8102f/search-wakatime-extension-in-vscode.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 84.375%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"VS Code에서 WakaTime 익스텐션 검색하기\"\n        title=\"VS Code에서 WakaTime 익스텐션 검색하기\"\n        src=\"/static/8f95c0df8caa980e4acd1a2bd509351c/8102f/search-wakatime-extension-in-vscode.jpg\"\n        srcset=\"/static/8f95c0df8caa980e4acd1a2bd509351c/a3e66/search-wakatime-extension-in-vscode.jpg 480w,\n/static/8f95c0df8caa980e4acd1a2bd509351c/8102f/search-wakatime-extension-in-vscode.jpg 512w\"\n        sizes=\"(max-width: 512px) 100vw, 512px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>VS Code에서 WakaTime 익스텐션 검색하기</p></figcaption>\n  </figure></p>\n<p>시간을 다루는 플러그인이라 아이콘이 🕙 시계 모양입니다. 아이콘 디자인에는 큰 에너지를 쏟지 않은 듯 합니다. 와카! 내 시간을 관리해 줘! 주문을 외우고 설치를 시작했습니다. <small>(wa로 시작해서 그런지 와디즈스러워서 정들었..)</small></p>\n<h3 id=\"API-Key\" style=\"position:relative;\">API Key<a href=\"#API-Key\" aria-label=\"API Key permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>설치를 마치면 <strong>API Key</strong>를 입력해야 하는데요, API Key는 <strong><a href=\"https://wakatime.com/api-key\">여기</a></strong>에서 만들면 됩니다. 보통 설치 직후 바로 API Key를 입력하라는 프롬프트가 뜨는데 그렇지 않을 경우 <code>⌘ + Shift + P</code> - WakaTime API Key 단어를 검색해 보세요.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 960px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/9dc4073a99d3c1a094025cbae250b702/fb816/wakatime-api-key.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 10%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/9dc4073a99d3c1a094025cbae250b702/fb816/wakatime-api-key.jpg\"\n        srcset=\"/static/9dc4073a99d3c1a094025cbae250b702/a3e66/wakatime-api-key.jpg 480w,\n/static/9dc4073a99d3c1a094025cbae250b702/fb816/wakatime-api-key.jpg 960w\"\n        sizes=\"(max-width: 960px) 100vw, 960px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/7dc4ed68b025315a1545829d8421e99c/a73e1/wakatime-your-secret-api-key.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 60.83333333333334%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/7dc4ed68b025315a1545829d8421e99c/aaf92/wakatime-your-secret-api-key.jpg\"\n        srcset=\"/static/7dc4ed68b025315a1545829d8421e99c/a3e66/wakatime-your-secret-api-key.jpg 480w,\n/static/7dc4ed68b025315a1545829d8421e99c/fb816/wakatime-your-secret-api-key.jpg 960w,\n/static/7dc4ed68b025315a1545829d8421e99c/aaf92/wakatime-your-secret-api-key.jpg 1920w,\n/static/7dc4ed68b025315a1545829d8421e99c/a73e1/wakatime-your-secret-api-key.jpg 2458w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h3 id=\"Dashboard\" style=\"position:relative;\">Dashboard<a href=\"#Dashboard\" aria-label=\"Dashboard permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>짝짝짝 👏👏👏 !!! 설정을 완료하였습니다. 이제 개발을 시작하세요. 대략 반나절 정도 지나면 대시보드에서 수집된 메트릭을 확인할 수 있습니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/4cc515a84de7b587d712a889d6ddcd2c/998db/wakatime-dashboard.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 60.83333333333334%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"5시간 10분 5초 동안 개발한 나의 대시보드\"\n        title=\"5시간 10분 5초 동안 개발한 나의 대시보드\"\n        src=\"/static/4cc515a84de7b587d712a889d6ddcd2c/aaf92/wakatime-dashboard.jpg\"\n        srcset=\"/static/4cc515a84de7b587d712a889d6ddcd2c/a3e66/wakatime-dashboard.jpg 480w,\n/static/4cc515a84de7b587d712a889d6ddcd2c/fb816/wakatime-dashboard.jpg 960w,\n/static/4cc515a84de7b587d712a889d6ddcd2c/aaf92/wakatime-dashboard.jpg 1920w,\n/static/4cc515a84de7b587d712a889d6ddcd2c/1d134/wakatime-dashboard.jpg 2880w,\n/static/4cc515a84de7b587d712a889d6ddcd2c/998db/wakatime-dashboard.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>5시간 10분 5초 동안 개발한 나의 대시보드</p></figcaption>\n  </figure></p>\n<h3 id=\"Goals\" style=\"position:relative;\">Goals<a href=\"#Goals\" aria-label=\"Goals permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>대시보드만 확인하면 재미가 없겠죠? WakaTime의 치트 키! <strong>목표</strong>를 설정해 보세요. ① 총 개발 시간, ② 특정 프로젝트 개발 시간, ③ 특정 언어 개발 시간, ④ 특정 에디터 개발 시간 이렇게 4가지 기준으로 세분화해서 설정 가능합니다.</p>\n<div style=\"position: relative; padding-bottom: 57.23370429252782%; height: 0;\"><iframe src=\"https://www.loom.com/embed/5850d8deddfd4d9ab730592a77191fe8\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/b2d3182dab6c6bca7e8c0a4c90a34edc/998db/wakatime-goal.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 60.83333333333334%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"목표는 찬란하게, 실행은 초라하게\"\n        title=\"목표는 찬란하게, 실행은 초라하게\"\n        src=\"/static/b2d3182dab6c6bca7e8c0a4c90a34edc/aaf92/wakatime-goal.jpg\"\n        srcset=\"/static/b2d3182dab6c6bca7e8c0a4c90a34edc/a3e66/wakatime-goal.jpg 480w,\n/static/b2d3182dab6c6bca7e8c0a4c90a34edc/fb816/wakatime-goal.jpg 960w,\n/static/b2d3182dab6c6bca7e8c0a4c90a34edc/aaf92/wakatime-goal.jpg 1920w,\n/static/b2d3182dab6c6bca7e8c0a4c90a34edc/1d134/wakatime-goal.jpg 2880w,\n/static/b2d3182dab6c6bca7e8c0a4c90a34edc/998db/wakatime-goal.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>목표는 찬란하게, 실행은 초라하게</p></figcaption>\n  </figure></p>\n<h3 id=\"Upgrade\" style=\"position:relative;\">Upgrade<a href=\"#Upgrade\" aria-label=\"Upgrade permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>Premium 버전으로 업그레이드하면 다음과 같이 확장된 서비스와 Teams 메뉴까지 사용할 수 있지만 개인적으로 사용할 때는 무료 버전만 사용해도 충분합니다.</p>\n<p><figure class=\"gatsby-resp-image-figure\" style=\"\">\n    <span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/04df06a65963850088517288fddabd85/998db/wakatime-upgrade.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 60.83333333333334%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"팀에서 사용하면 뭔가 감시할 것 같은 👀\"\n        title=\"팀에서 사용하면 뭔가 감시할 것 같은 👀\"\n        src=\"/static/04df06a65963850088517288fddabd85/aaf92/wakatime-upgrade.jpg\"\n        srcset=\"/static/04df06a65963850088517288fddabd85/a3e66/wakatime-upgrade.jpg 480w,\n/static/04df06a65963850088517288fddabd85/fb816/wakatime-upgrade.jpg 960w,\n/static/04df06a65963850088517288fddabd85/aaf92/wakatime-upgrade.jpg 1920w,\n/static/04df06a65963850088517288fddabd85/1d134/wakatime-upgrade.jpg 2880w,\n/static/04df06a65963850088517288fddabd85/998db/wakatime-upgrade.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span>\n    <figcaption class=\"gatsby-resp-image-figcaption\"><p>팀에서 사용하면 뭔가 감시할 것 같은 👀</p></figcaption>\n  </figure></p>\n<h2 id=\"CodeTime\" style=\"position:relative;\">CodeTime<a href=\"#CodeTime\" aria-label=\"CodeTime permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p>VS Code에서 검색하면 같이 나오는 후발 주자 플러그인으로 사용 방법은 WakaTime과 비슷합니다. CodeTime은 API Key 대신 <strong>Token</strong>이라는 용어를 사용합니다.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/ab525751da0de73d3848e977dd9571c1/998db/codetime-account.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 55.00000000000001%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/ab525751da0de73d3848e977dd9571c1/aaf92/codetime-account.jpg\"\n        srcset=\"/static/ab525751da0de73d3848e977dd9571c1/a3e66/codetime-account.jpg 480w,\n/static/ab525751da0de73d3848e977dd9571c1/fb816/codetime-account.jpg 960w,\n/static/ab525751da0de73d3848e977dd9571c1/aaf92/codetime-account.jpg 1920w,\n/static/ab525751da0de73d3848e977dd9571c1/1d134/codetime-account.jpg 2880w,\n/static/ab525751da0de73d3848e977dd9571c1/998db/codetime-account.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>근데 보시다시피 지원하는 에디터가 많지 않습니다. 지원하는 에디터가 늘어나더라도 WakaTime이 지원하는 에디터가 압도적으로 많아서 이 부분은 WakaTime을 넘어설 수 없을 것 같아요.</p>\n<h3 id=\"Overview\" style=\"position:relative;\">Overview<a href=\"#Overview\" aria-label=\"Overview permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>CodeTime은 총 개발 시간, 가장 많이 사용한 언어, 에디터, 플랫폼 등을 각 그래프 상단에 정리해서 보여주는 Overview 화면을 제공합니다.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/d886ec5b94341c9a720f4a8134e415c0/998db/codetime-overview.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 55.00000000000001%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/d886ec5b94341c9a720f4a8134e415c0/aaf92/codetime-overview.jpg\"\n        srcset=\"/static/d886ec5b94341c9a720f4a8134e415c0/a3e66/codetime-overview.jpg 480w,\n/static/d886ec5b94341c9a720f4a8134e415c0/fb816/codetime-overview.jpg 960w,\n/static/d886ec5b94341c9a720f4a8134e415c0/aaf92/codetime-overview.jpg 1920w,\n/static/d886ec5b94341c9a720f4a8134e415c0/1d134/codetime-overview.jpg 2880w,\n/static/d886ec5b94341c9a720f4a8134e415c0/998db/codetime-overview.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h3 id=\"Dashboard-1\" style=\"position:relative;\">Dashboard<a href=\"#Dashboard-1\" aria-label=\"Dashboard 1 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h3>\n<p>중간에 재밌는 그래프가 하나 있습니다. <strong>Programming time per hour</strong>, 1시간에 몇 분 집중하고 몇 분 쉬는지 알 수 있는 그래프입니다. 여러분의 개발 패턴을 고스란히 알 수 있으니 한번 살펴보세요.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 1920px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/8e59986a47d8a478e417078b13151126/998db/codetime-dashboard.jpg\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 117.08333333333334%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"\"\n        title=\"\"\n        src=\"/static/8e59986a47d8a478e417078b13151126/aaf92/codetime-dashboard.jpg\"\n        srcset=\"/static/8e59986a47d8a478e417078b13151126/a3e66/codetime-dashboard.jpg 480w,\n/static/8e59986a47d8a478e417078b13151126/fb816/codetime-dashboard.jpg 960w,\n/static/8e59986a47d8a478e417078b13151126/aaf92/codetime-dashboard.jpg 1920w,\n/static/8e59986a47d8a478e417078b13151126/1d134/codetime-dashboard.jpg 2880w,\n/static/8e59986a47d8a478e417078b13151126/998db/codetime-dashboard.jpg 3072w\"\n        sizes=\"(max-width: 1920px) 100vw, 1920px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2 id=\"결론\" style=\"position:relative;\">결론<a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<p>지원하는 에디터도 다양하고 목표도 설정할 수 있는 WakaTime을 사용해 보세요. CodeTime에 비해 업데이트 주기도 짧아서 안정성도 높고 새로운 기능 또한 빠르게 접할 수 있을 거예요.</p>","frontmatter":{"category":"developer","index":1,"title":"WakaTime vs CodeTime 🕖","description":"이 플러그인은 애플 워치처럼 내 개발 활동을 스마트하게 측정합니다. 대시보드 형태로 한눈에 확인할 수 있어요.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/developer/wakatime-vs-codetime/cover.jpg?raw=true","date":"2021-12-23"}},{"id":"cb9a65c4-672b-52e9-98b2-441daf7049b0","fields":{"slug":"/monologue/concerns-and-insights/"},"html":"","frontmatter":{"category":"monologue","index":1,"title":"프론트엔드를 개발하며 마주했던 치열한 고민과 인사이트 🙋🏻‍♀️","description":"새로운 기술을 매번 익혀야 하는지, 잘한다는 개발자의 블로그, 깃허브를 자주 보면 되는지, 무엇을 해야 좋은 프론트엔드 개발자가 될 수 있을지 늘 고민이 됩니다.","image":"https://github.com/aroundus/aroundus.github.io/blob/master/posts/monologue/concerns-and-insights/cover.jpg?raw=true","date":"2021-12-20"}}]}}}