{"componentChunkName":"component---src-components-template-post-template-tsx","path":"/post/typescript/lower-snake-case-type/","result":{"data":{"site":{"siteMetadata":{"title":"AROUNDUS"}},"markdownRemark":{"id":"0960daeb-0787-5467-b441-c5e9371c56af","fields":{"slug":"/post/typescript/lower-snake-case-type/"},"html":"<h1>TL;DR</h1>\n<p><code>camelCase</code> 타입을 정의하면 자동으로 <code>lower_snake_case</code> 타입까지 만들 수 있어요.</p>\n<h2 id=\"Function\" style=\"position:relative;\">Function<a href=\"#Function\" aria-label=\"Function permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"51201398847645250000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"코드 내용을 복사하였습니다.\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`/**\n * lower_snake_case 변환\n *\n * @description camelCase, PascalCase 표기법을 lower_snake_case 표기법으로 변환합니다. 축약어 대문자 조합인 경우도 포함합니다.\n * @example\n * convertToLowerSnakeCase('createdAt') // created_At\n * convertToLowerSnakeCase('created_At') // created_At (동일)\n * convertToLowerSnakeCase('imageURL') // image_url\n * convertToLowerSnakeCase('isCTAButton') // is_cta_button\n */\nfunction convertToLowerSnakeCase(value: string) {\n  return value\n    .replace(/([a-z])([A-Z]+)/, '\\$1_\\$2')\n    .replace(/([A-Z])([A-Z])([a-z]+)/, '\\$1_\\$2\\$3')\n    .toLowerCase();\n}`, `51201398847645250000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg viewBox=\"0 0 24 24\"><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * lower_snake_case 변환\n *\n * @description camelCase, PascalCase 표기법을 lower_snake_case 표기법으로 변환합니다. 축약어 대문자 조합인 경우도 포함합니다.\n * @example\n * convertToLowerSnakeCase('createdAt') // created_At\n * convertToLowerSnakeCase('created_At') // created_At (동일)\n * convertToLowerSnakeCase('imageURL') // image_url\n * convertToLowerSnakeCase('isCTAButton') // is_cta_button\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">convertToLowerSnakeCase</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> value\n    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([a-z])([A-Z]+)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$1_$2'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">([A-Z])([A-Z])([a-z]+)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$1_$2$3'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"Utility-Type\" style=\"position:relative;\">Utility Type<a href=\"#Utility-Type\" aria-label=\"Utility Type permalink\" class=\"icon-heading-link after\"><svg viewBox=\"0 0 24 24\" height=\"24\" aria-hidden=\"true\"><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"></path></svg></a></h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"23003308558462775000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"코드 내용을 복사하였습니다.\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Separator = ' ' | '-' | '_';\n\n/**\n * camelCase -> snake_Case\n *\n * @description 소문자+대문자 조합에 대하여 snake_Case로 변환합니다.\n * @example\n * CamelCaseToSnakeCase<'createdAt'> // created_At\n * CamelCaseToSnakeCase<'created_at'> // created_at (동일)\n * CamelCaseToSnakeCase<'imageURL'> // image_URL\n * CamelCaseToSnakeCase<'isCTAButton'> // is_CTAButton\n */\n// prettier-ignore\ntype CamelCaseToSnakeCase<T extends string> = T extends \\`\\${infer Char1}\\${infer Char2}\\${infer Rest}\\`\n  ? \\`\\${Char1}\\${Char2}\\` extends \\`\\${Char1}\\${Separator}\\`\n    ? \\`\\${Char1}\\${Char2}\\${CamelCaseToSnakeCase<Rest>}\\`\n    : \\`\\${Char1}\\${Char2}\\` extends \\`\\${Lowercase<Char1>}\\${Uppercase<Char2>}\\`\n      ? \\`\\${Char1}_\\${CamelCaseToSnakeCase<\\`\\${Char2}\\${Rest}\\`>}\\`\n      : \\`\\${Char1}\\${CamelCaseToSnakeCase<\\`\\${Char2}\\${Rest}\\`>}\\`\n  : T;\n\n/**\n * camelUPPERCase -> snake_UPPER_Case\n *\n * @description 대문자+대문자+소문자 조합에 대하여 snake_UPPER_Case로 변환합니다.\n * @example\n * UpperCamelCaseToSnakeCase<'createdAt'> // createdAt (동일)\n * UpperCamelCaseToSnakeCase<'created_at'> // created_at (동일)\n * UpperCamelCaseToSnakeCase<'imageURL'> // imageURL (동일)\n * UpperCamelCaseToSnakeCase<'isCTAButton'> // isCTA_Button\n */\n// prettier-ignore\ntype UpperCamelCaseToSnakeCase<T extends string> = T extends \\`\\${infer Char1}\\${infer Char2}\\${infer Char3}\\${infer Rest}\\`\n  ? Char1 extends Separator\n    ? \\`\\${Char1}\\${UpperCamelCaseToSnakeCase<\\`\\${Char2}\\${Char3}\\${Rest}\\`>}\\`\n    : \\`\\${Char1}\\${Char2}\\${Char3}\\` extends \\`\\${Uppercase<Char1>}\\${Uppercase<Char2>}\\${Lowercase<Char3>}\\`\n      ? \\`\\${Char1}_\\${UpperCamelCaseToSnakeCase<\\`\\${Char2}\\${Char3}\\${Rest}\\`>}\\`\n      : \\`\\${Char1}\\${UpperCamelCaseToSnakeCase<\\`\\${Char2}\\${Char3}\\${Rest}\\`>}\\`\n  : T;\n\n/**\n * camelCase -> snake_case 변환\n *\n * @description\n * 1. 소문자+대문자 조합에 대하여 snake_Case로 변환합니다. (isCTAButton -> is_CTAButton)\n * 2. 대문자+대문자+소문자 조합에 대하여 snake_UPPER_Case로 변환합니다. (is_CTAButton -> is_CTA_Button)\n * 3. 전체 소문자로 변환합니다. (is_CTA_Button -> is_cta_button)\n *\n * @example\n * LowerSnakeCase<'createdAt'> // created_at\n * LowerSnakeCase<'created_at'> // created_at (동일)\n * LowerSnakeCase<'imageURL'> // image_url\n * LowerSnakeCase<'isCTAButton'> // is_cta_button\n */\nexport type LowerSnakeCase<T extends string> = Lowercase<UpperCamelCaseToSnakeCase<CamelCaseToSnakeCase<T>>>;\n\nexport type LowerSnakeCaseObjectKey<T> = {\n  [K in keyof T as LowerSnakeCase<string & K>]: T[K];\n};`, `23003308558462775000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg viewBox=\"0 0 24 24\"><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"></path></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Separator</span> <span class=\"token operator\">=</span> <span class=\"token string\">' '</span> <span class=\"token operator\">|</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * camelCase -> snake_Case\n *\n * @description 소문자+대문자 조합에 대하여 snake_Case로 변환합니다.\n * @example\n * CamelCaseToSnakeCase&lt;'createdAt'> // created_At\n * CamelCaseToSnakeCase&lt;'created_at'> // created_at (동일)\n * CamelCaseToSnakeCase&lt;'imageURL'> // image_URL\n * CamelCaseToSnakeCase&lt;'isCTAButton'> // is_CTAButton\n */</span>\n<span class=\"token comment\">// prettier-ignore</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">CamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Separator<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>CamelCaseToSnakeCase<span class=\"token operator\">&lt;</span>Rest<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Lowercase<span class=\"token operator\">&lt;</span>Char1<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Uppercase<span class=\"token operator\">&lt;</span>Char2<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>CamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>CamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * camelUPPERCase -> snake_UPPER_Case\n *\n * @description 대문자+대문자+소문자 조합에 대하여 snake_UPPER_Case로 변환합니다.\n * @example\n * UpperCamelCaseToSnakeCase&lt;'createdAt'> // createdAt (동일)\n * UpperCamelCaseToSnakeCase&lt;'created_at'> // created_at (동일)\n * UpperCamelCaseToSnakeCase&lt;'imageURL'> // imageURL (동일)\n * UpperCamelCaseToSnakeCase&lt;'isCTAButton'> // isCTA_Button\n */</span>\n<span class=\"token comment\">// prettier-ignore</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">UpperCamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Char3<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">infer</span> Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token operator\">?</span> Char1 <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Separator</span>\n    <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>UpperCamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char3<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char3<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Uppercase<span class=\"token operator\">&lt;</span>Char1<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Uppercase<span class=\"token operator\">&lt;</span>Char2<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Lowercase<span class=\"token operator\">&lt;</span>Char3<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>UpperCamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char3<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>UpperCamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char2<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Char3<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Rest<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * camelCase -> snake_case 변환\n *\n * @description\n * 1. 소문자+대문자 조합에 대하여 snake_Case로 변환합니다. (isCTAButton -> is_CTAButton)\n * 2. 대문자+대문자+소문자 조합에 대하여 snake_UPPER_Case로 변환합니다. (is_CTAButton -> is_CTA_Button)\n * 3. 전체 소문자로 변환합니다. (is_CTA_Button -> is_cta_button)\n *\n * @example\n * LowerSnakeCase&lt;'createdAt'> // created_at\n * LowerSnakeCase&lt;'created_at'> // created_at (동일)\n * LowerSnakeCase&lt;'imageURL'> // image_url\n * LowerSnakeCase&lt;'isCTAButton'> // is_cta_button\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">LowerSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token builtin\">string</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Lowercase<span class=\"token operator\">&lt;</span>UpperCamelCaseToSnakeCase<span class=\"token operator\">&lt;</span>CamelCaseToSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">>>></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">LowerSnakeCaseObjectKey<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token constant\">K</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">keyof</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">as</span> LowerSnakeCase<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">K</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#tldr\">TL;DR</a></p>\n<ul>\n<li><a href=\"#function\">Function</a></li>\n<li><a href=\"#utility-type\">Utility Type</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"category":"typescript","index":4,"title":"LowerSnakeCase Utility Type 만들기","description":"camelCase 표기법을 lower_snake_case 표기법으로 변환하는 유틸리티 타입을 소개합니다. 축약어 대문자 조합인 isCTAButton 이름인 경우에도 is_cta_button 이름으로 변환할 수 있어야 합니다.","image":null,"date":"2024-06-09"}},"prevPost":{"fields":{"slug":"/post/developer/team-frontend-portfolio-tips/"},"frontmatter":{"category":"developer","title":"팀 프론트엔드 포트폴리오 구성에 필요한 몇 가지 팁 알아보기"}},"nextPost":null},"pageContext":{"id":"0960daeb-0787-5467-b441-c5e9371c56af","prevPostID":"7cfa6369-31a6-5585-b121-634d385d0697","nextPostID":null}},"staticQueryHashes":["1955143157","2731891648"],"slicesMap":{}}